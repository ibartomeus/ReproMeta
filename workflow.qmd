---
title: "A workflow to be an ace reproducible scientist"
author: "I. Bartomeus"
format: revealjs
editor: visual
---

## Work within a project

-   Rstudio projects are self contained.

-   GitHub integration allow for version control: <https://happygitwithr.com/>

-   GitHub allow for larger visibility and integration with other tools (see below).

## Create the actual dynamic document

-   Dynamic documents combine executable code and formatted text. [Quarto](https://quarto.org/) is the current standard.

-   Text is annotated using Markdown flavored syntax.

-   They can easily be turned into [webpages](https://quarto.org/docs/websites/), [presentations](https://quarto.org/docs/presentations/) and [interactive](https://quarto.org/docs/interactive/) documents.

## Create the actual dynamic document

-   In `/demo.qmd` you can play with one of this documents.

-   Or open a new empty Quarto document (upper-right corner in Rstudio).

## Add a ReadMe and a licence

-   Explain people what you are doing: README.md file.

-   .md is better here because is automatically rendered by GitHub.

-   Explain people what they can do with your project: Licence it!

-   Other useful files: `.gitignore`, `.Rproj`

## Licenses

-   Add a `LICENCE` txt file

    -   Data: Creative commons: CC-BY

    -   Code: MIT

-   [Choose a licence](https://choosealicense.com/)

-   Add it to README.md: e.g. [![License: CC BY 4.0](https://img.shields.io/badge/License-CC_BY_4.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/) (which you get through this code: `[![License: CC BY 4.0](https://img.shields.io/badge/License-CC_BY_4.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/)`

## If releasing code: Testthat and renv

-   Defensive programming ([examples](http://adv-r.had.co.nz/Exceptions-Debugging.html#defensive-programming)) and maybe functionalize your code

-   Unit testing ([testthat](https://testthat.r-lib.org/))

    -   Check impossible values vs improbable values

-   Track software versions ([Renv](https://rstudio.github.io/renv/articles/renv.html))

-   Code review / Pair programming

## If releasing data, add Metadata

-   Standardize coding (4_NitrogenPhosphurous \> 4NP \> 4)
-   Never edit the master file
-   Use [tidy](http://vita.had.co.nz/papers/tidy-data.pdf) data structures and plain, standard and open formats (e.g. csv)
-   Metadata ([Dataspice](https://cran.r-project.org/web/packages/dataspice/vignettes/overview.html): creates computer (JSON, EML) and human readable (html) metadata)

## Make a release and link it to Zenodo

-   Zenodo gives you permanent stable DOI

-   Log in to <https://zenodo.org/> (with your GitHub account).

-   Go to /GitHub in the top main menu and update your repos. Flip the switch of your repo.

-   In GitHub, go to Releases (right column) and create a new one.

## Make a release and link it to Zenodo

-   Versioning should use incremental numbers for minor and major updates (0.1, 0.2, 1.0, 1.2, ...)

-   Go back to Zenodo to collect your DOI and add it to README.md file.

-   Think on adding a `News.md`

## Make the document/webpage visible on github 

-   In GitHub go to `Settings/Pages` and enable webpage creation.

-   Many options are possible, but a simple `Deploy from branch`, `main` in `/docs` should work.

-   GitHub will look for a `index.html` and a `.nojekyll` file.

-   You can link it to the GitHub "About" section in the right column.

## Issues: Templates.

-   Explain how to contribute and report bugs (e.g. Github issues)

## Automation: github actions

Github actions e.g. <https://github.com/ibartomeus/CropPollinationModels>

## Summary:

`Readme.md` with DOI, version, file description, relevant info, etc...

`/Data` with raw, clean and the relevant scripts.

`/Analysis`

`/Manuscript`

`LICENCE`

`testthat`

`News.md`

`Metadata/`

`Renv/`

## All will change

-   Tools evolve

-   Plan accordingly (use standard open formats)

-   Will we see [living papers]((e.g. living figures https://www.nature.com/articles/nature.2015.17382)) in our lifetime?

## Acknowledgement: 

-   Previous workshops: <https://github.com/RadicalCommEcol/Open_science/blob/main/ORT_Science.qmd>
